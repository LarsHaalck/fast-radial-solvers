#include "mex.h"

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
	if (nrhs != 2) {
		mexErrMsgIdAndTxt("lindata:nrhs", "Wrong number of inputs.");
	}
	if (nlhs != 1) {
		mexErrMsgIdAndTxt("lindata:nlhs", "One output required.");
	}

  double *Ar = mxGetPr(prhs[0]);
  double *Br = mxGetPr(prhs[1]);
	plhs[0] = mxCreateDoubleMatrix(9,1,mxREAL);
   double *data = mxGetPr(plhs[0]);
   double fc[33];
fc[0] = -Br[0]*Br[14]*Br[23]+Br[0]*Br[15]*Br[22]+Br[6]*Br[8]*Br[23]-Br[6]*Br[15]*Br[16]-Br[7]*Br[8]*Br[22]+Br[7]*Br[14]*Br[16];
fc[1] = -Ar[0]*Br[14]*Br[23]+Ar[0]*Br[15]*Br[22]+Ar[6]*Br[8]*Br[23]-Ar[6]*Br[15]*Br[16]-Ar[7]*Br[8]*Br[22]+Ar[7]*Br[14]*Br[16]+Ar[8]*Br[6]*Br[23]-Ar[8]*Br[7]*Br[22]-Ar[14]*Br[0]*Br[23]+Ar[14]*Br[7]*Br[16]+Ar[15]*Br[0]*Br[22]-Ar[15]*Br[6]*Br[16]-Ar[16]*Br[6]*Br[15]+Ar[16]*Br[7]*Br[14]+Ar[22]*Br[0]*Br[15]-Ar[22]*Br[7]*Br[8]-Ar[23]*Br[0]*Br[14]+Ar[23]*Br[6]*Br[8];
fc[2] = -Ar[0]*Ar[14]*Br[23]+Ar[0]*Ar[15]*Br[22]+Ar[0]*Ar[22]*Br[15]-Ar[0]*Ar[23]*Br[14]+Ar[6]*Ar[8]*Br[23]-Ar[6]*Ar[15]*Br[16]-Ar[6]*Ar[16]*Br[15]+Ar[6]*Ar[23]*Br[8]-Ar[7]*Ar[8]*Br[22]+Ar[7]*Ar[14]*Br[16]+Ar[7]*Ar[16]*Br[14]-Ar[7]*Ar[22]*Br[8]-Ar[8]*Ar[22]*Br[7]+Ar[8]*Ar[23]*Br[6]+Ar[14]*Ar[16]*Br[7]-Ar[14]*Ar[23]*Br[0]-Ar[15]*Ar[16]*Br[6]+Ar[15]*Ar[22]*Br[0];
fc[3] = -Ar[0]*Ar[14]*Ar[23]+Ar[0]*Ar[15]*Ar[22]+Ar[6]*Ar[8]*Ar[23]-Ar[6]*Ar[15]*Ar[16]-Ar[7]*Ar[8]*Ar[22]+Ar[7]*Ar[14]*Ar[16];
fc[4] = -Br[1]*Br[14]*Br[23]+Br[1]*Br[15]*Br[22]+Br[6]*Br[9]*Br[23]-Br[6]*Br[15]*Br[17]-Br[7]*Br[9]*Br[22]+Br[7]*Br[14]*Br[17];
fc[5] = -Ar[1]*Br[14]*Br[23]+Ar[1]*Br[15]*Br[22]+Ar[6]*Br[9]*Br[23]-Ar[6]*Br[15]*Br[17]-Ar[7]*Br[9]*Br[22]+Ar[7]*Br[14]*Br[17]+Ar[9]*Br[6]*Br[23]-Ar[9]*Br[7]*Br[22]-Ar[14]*Br[1]*Br[23]+Ar[14]*Br[7]*Br[17]+Ar[15]*Br[1]*Br[22]-Ar[15]*Br[6]*Br[17]-Ar[17]*Br[6]*Br[15]+Ar[17]*Br[7]*Br[14]+Ar[22]*Br[1]*Br[15]-Ar[22]*Br[7]*Br[9]-Ar[23]*Br[1]*Br[14]+Ar[23]*Br[6]*Br[9];
fc[6] = -Ar[1]*Ar[14]*Br[23]+Ar[1]*Ar[15]*Br[22]+Ar[1]*Ar[22]*Br[15]-Ar[1]*Ar[23]*Br[14]+Ar[6]*Ar[9]*Br[23]-Ar[6]*Ar[15]*Br[17]-Ar[6]*Ar[17]*Br[15]+Ar[6]*Ar[23]*Br[9]-Ar[7]*Ar[9]*Br[22]+Ar[7]*Ar[14]*Br[17]+Ar[7]*Ar[17]*Br[14]-Ar[7]*Ar[22]*Br[9]-Ar[9]*Ar[22]*Br[7]+Ar[9]*Ar[23]*Br[6]+Ar[14]*Ar[17]*Br[7]-Ar[14]*Ar[23]*Br[1]-Ar[15]*Ar[17]*Br[6]+Ar[15]*Ar[22]*Br[1];
fc[7] = -Ar[1]*Ar[14]*Ar[23]+Ar[1]*Ar[15]*Ar[22]+Ar[6]*Ar[9]*Ar[23]-Ar[6]*Ar[15]*Ar[17]-Ar[7]*Ar[9]*Ar[22]+Ar[7]*Ar[14]*Ar[17];
fc[8] = Br[14]*Br[23]-Br[15]*Br[22];
fc[9] = Ar[14]*Br[23]-Ar[15]*Br[22]-Ar[22]*Br[15]+Ar[23]*Br[14];
fc[10] = Ar[14]*Ar[23]-Ar[15]*Ar[22];
fc[11] = -Br[2]*Br[14]*Br[23]+Br[2]*Br[15]*Br[22]+Br[6]*Br[10]*Br[23]-Br[6]*Br[15]*Br[18]-Br[7]*Br[10]*Br[22]+Br[7]*Br[14]*Br[18];
fc[12] = -Ar[2]*Br[14]*Br[23]+Ar[2]*Br[15]*Br[22]+Ar[6]*Br[10]*Br[23]-Ar[6]*Br[15]*Br[18]-Ar[7]*Br[10]*Br[22]+Ar[7]*Br[14]*Br[18]+Ar[10]*Br[6]*Br[23]-Ar[10]*Br[7]*Br[22]-Ar[14]*Br[2]*Br[23]+Ar[14]*Br[7]*Br[18]+Ar[15]*Br[2]*Br[22]-Ar[15]*Br[6]*Br[18]-Ar[18]*Br[6]*Br[15]+Ar[18]*Br[7]*Br[14]+Ar[22]*Br[2]*Br[15]-Ar[22]*Br[7]*Br[10]-Ar[23]*Br[2]*Br[14]+Ar[23]*Br[6]*Br[10];
fc[13] = -Ar[2]*Ar[14]*Br[23]+Ar[2]*Ar[15]*Br[22]+Ar[2]*Ar[22]*Br[15]-Ar[2]*Ar[23]*Br[14]+Ar[6]*Ar[10]*Br[23]-Ar[6]*Ar[15]*Br[18]-Ar[6]*Ar[18]*Br[15]+Ar[6]*Ar[23]*Br[10]-Ar[7]*Ar[10]*Br[22]+Ar[7]*Ar[14]*Br[18]+Ar[7]*Ar[18]*Br[14]-Ar[7]*Ar[22]*Br[10]-Ar[10]*Ar[22]*Br[7]+Ar[10]*Ar[23]*Br[6]+Ar[14]*Ar[18]*Br[7]-Ar[14]*Ar[23]*Br[2]-Ar[15]*Ar[18]*Br[6]+Ar[15]*Ar[22]*Br[2];
fc[14] = -Ar[2]*Ar[14]*Ar[23]+Ar[2]*Ar[15]*Ar[22]+Ar[6]*Ar[10]*Ar[23]-Ar[6]*Ar[15]*Ar[18]-Ar[7]*Ar[10]*Ar[22]+Ar[7]*Ar[14]*Ar[18];
fc[15] = -Br[3]*Br[14]*Br[23]+Br[3]*Br[15]*Br[22]+Br[6]*Br[11]*Br[23]-Br[6]*Br[15]*Br[19]-Br[7]*Br[11]*Br[22]+Br[7]*Br[14]*Br[19];
fc[16] = -Ar[3]*Br[14]*Br[23]+Ar[3]*Br[15]*Br[22]+Ar[6]*Br[11]*Br[23]-Ar[6]*Br[15]*Br[19]-Ar[7]*Br[11]*Br[22]+Ar[7]*Br[14]*Br[19]+Ar[11]*Br[6]*Br[23]-Ar[11]*Br[7]*Br[22]-Ar[14]*Br[3]*Br[23]+Ar[14]*Br[7]*Br[19]+Ar[15]*Br[3]*Br[22]-Ar[15]*Br[6]*Br[19]-Ar[19]*Br[6]*Br[15]+Ar[19]*Br[7]*Br[14]+Ar[22]*Br[3]*Br[15]-Ar[22]*Br[7]*Br[11]-Ar[23]*Br[3]*Br[14]+Ar[23]*Br[6]*Br[11];
fc[17] = -Ar[3]*Ar[14]*Br[23]+Ar[3]*Ar[15]*Br[22]+Ar[3]*Ar[22]*Br[15]-Ar[3]*Ar[23]*Br[14]+Ar[6]*Ar[11]*Br[23]-Ar[6]*Ar[15]*Br[19]-Ar[6]*Ar[19]*Br[15]+Ar[6]*Ar[23]*Br[11]-Ar[7]*Ar[11]*Br[22]+Ar[7]*Ar[14]*Br[19]+Ar[7]*Ar[19]*Br[14]-Ar[7]*Ar[22]*Br[11]-Ar[11]*Ar[22]*Br[7]+Ar[11]*Ar[23]*Br[6]+Ar[14]*Ar[19]*Br[7]-Ar[14]*Ar[23]*Br[3]-Ar[15]*Ar[19]*Br[6]+Ar[15]*Ar[22]*Br[3];
fc[18] = -Ar[3]*Ar[14]*Ar[23]+Ar[3]*Ar[15]*Ar[22]+Ar[6]*Ar[11]*Ar[23]-Ar[6]*Ar[15]*Ar[19]-Ar[7]*Ar[11]*Ar[22]+Ar[7]*Ar[14]*Ar[19];
fc[19] = -Br[6]*Br[23]+Br[7]*Br[22];
fc[20] = -Ar[6]*Br[23]+Ar[7]*Br[22]+Ar[22]*Br[7]-Ar[23]*Br[6];
fc[21] = -Ar[6]*Ar[23]+Ar[7]*Ar[22];
fc[22] = -Br[4]*Br[14]*Br[23]+Br[4]*Br[15]*Br[22]+Br[6]*Br[12]*Br[23]-Br[6]*Br[15]*Br[20]-Br[7]*Br[12]*Br[22]+Br[7]*Br[14]*Br[20];
fc[23] = -Ar[4]*Br[14]*Br[23]+Ar[4]*Br[15]*Br[22]+Ar[6]*Br[12]*Br[23]-Ar[6]*Br[15]*Br[20]-Ar[7]*Br[12]*Br[22]+Ar[7]*Br[14]*Br[20]+Ar[12]*Br[6]*Br[23]-Ar[12]*Br[7]*Br[22]-Ar[14]*Br[4]*Br[23]+Ar[14]*Br[7]*Br[20]+Ar[15]*Br[4]*Br[22]-Ar[15]*Br[6]*Br[20]-Ar[20]*Br[6]*Br[15]+Ar[20]*Br[7]*Br[14]+Ar[22]*Br[4]*Br[15]-Ar[22]*Br[7]*Br[12]-Ar[23]*Br[4]*Br[14]+Ar[23]*Br[6]*Br[12];
fc[24] = -Ar[4]*Ar[14]*Br[23]+Ar[4]*Ar[15]*Br[22]+Ar[4]*Ar[22]*Br[15]-Ar[4]*Ar[23]*Br[14]+Ar[6]*Ar[12]*Br[23]-Ar[6]*Ar[15]*Br[20]-Ar[6]*Ar[20]*Br[15]+Ar[6]*Ar[23]*Br[12]-Ar[7]*Ar[12]*Br[22]+Ar[7]*Ar[14]*Br[20]+Ar[7]*Ar[20]*Br[14]-Ar[7]*Ar[22]*Br[12]-Ar[12]*Ar[22]*Br[7]+Ar[12]*Ar[23]*Br[6]+Ar[14]*Ar[20]*Br[7]-Ar[14]*Ar[23]*Br[4]-Ar[15]*Ar[20]*Br[6]+Ar[15]*Ar[22]*Br[4];
fc[25] = -Ar[4]*Ar[14]*Ar[23]+Ar[4]*Ar[15]*Ar[22]+Ar[6]*Ar[12]*Ar[23]-Ar[6]*Ar[15]*Ar[20]-Ar[7]*Ar[12]*Ar[22]+Ar[7]*Ar[14]*Ar[20];
fc[26] = -Br[5]*Br[14]*Br[23]+Br[5]*Br[15]*Br[22]+Br[6]*Br[13]*Br[23]-Br[6]*Br[15]*Br[21]-Br[7]*Br[13]*Br[22]+Br[7]*Br[14]*Br[21];
fc[27] = -Ar[5]*Br[14]*Br[23]+Ar[5]*Br[15]*Br[22]+Ar[6]*Br[13]*Br[23]-Ar[6]*Br[15]*Br[21]-Ar[7]*Br[13]*Br[22]+Ar[7]*Br[14]*Br[21]+Ar[13]*Br[6]*Br[23]-Ar[13]*Br[7]*Br[22]-Ar[14]*Br[5]*Br[23]+Ar[14]*Br[7]*Br[21]+Ar[15]*Br[5]*Br[22]-Ar[15]*Br[6]*Br[21]-Ar[21]*Br[6]*Br[15]+Ar[21]*Br[7]*Br[14]+Ar[22]*Br[5]*Br[15]-Ar[22]*Br[7]*Br[13]-Ar[23]*Br[5]*Br[14]+Ar[23]*Br[6]*Br[13];
fc[28] = -Ar[5]*Ar[14]*Br[23]+Ar[5]*Ar[15]*Br[22]+Ar[5]*Ar[22]*Br[15]-Ar[5]*Ar[23]*Br[14]+Ar[6]*Ar[13]*Br[23]-Ar[6]*Ar[15]*Br[21]-Ar[6]*Ar[21]*Br[15]+Ar[6]*Ar[23]*Br[13]-Ar[7]*Ar[13]*Br[22]+Ar[7]*Ar[14]*Br[21]+Ar[7]*Ar[21]*Br[14]-Ar[7]*Ar[22]*Br[13]-Ar[13]*Ar[22]*Br[7]+Ar[13]*Ar[23]*Br[6]+Ar[14]*Ar[21]*Br[7]-Ar[14]*Ar[23]*Br[5]-Ar[15]*Ar[21]*Br[6]+Ar[15]*Ar[22]*Br[5];
fc[29] = -Ar[5]*Ar[14]*Ar[23]+Ar[5]*Ar[15]*Ar[22]+Ar[6]*Ar[13]*Ar[23]-Ar[6]*Ar[15]*Ar[21]-Ar[7]*Ar[13]*Ar[22]+Ar[7]*Ar[14]*Ar[21];
fc[30] = Br[6]*Br[15]-Br[7]*Br[14];
fc[31] = Ar[6]*Br[15]-Ar[7]*Br[14]-Ar[14]*Br[7]+Ar[15]*Br[6];
fc[32] = Ar[6]*Ar[15]-Ar[7]*Ar[14];
data[8] = fc[0]*fc[15]*fc[30]-fc[0]*fc[19]*fc[26]-fc[4]*fc[11]*fc[30]+fc[4]*fc[19]*fc[22]+fc[8]*fc[11]*fc[26]-fc[8]*fc[15]*fc[22];
data[7] = fc[0]*fc[15]*fc[31]+fc[0]*fc[16]*fc[30]-fc[0]*fc[19]*fc[27]-fc[0]*fc[20]*fc[26]+fc[1]*fc[15]*fc[30]-fc[1]*fc[19]*fc[26]-fc[4]*fc[11]*fc[31]-fc[4]*fc[12]*fc[30]+fc[4]*fc[19]*fc[23]+fc[4]*fc[20]*fc[22]-fc[5]*fc[11]*fc[30]+fc[5]*fc[19]*fc[22]+fc[8]*fc[11]*fc[27]+fc[8]*fc[12]*fc[26]-fc[8]*fc[15]*fc[23]-fc[8]*fc[16]*fc[22]+fc[9]*fc[11]*fc[26]-fc[9]*fc[15]*fc[22];
data[6] = fc[0]*fc[15]*fc[32]+fc[0]*fc[16]*fc[31]+fc[0]*fc[17]*fc[30]-fc[0]*fc[19]*fc[28]-fc[0]*fc[20]*fc[27]-fc[0]*fc[21]*fc[26]+fc[1]*fc[15]*fc[31]+fc[1]*fc[16]*fc[30]-fc[1]*fc[19]*fc[27]-fc[1]*fc[20]*fc[26]+fc[2]*fc[15]*fc[30]-fc[2]*fc[19]*fc[26]-fc[4]*fc[11]*fc[32]-fc[4]*fc[12]*fc[31]-fc[4]*fc[13]*fc[30]+fc[4]*fc[19]*fc[24]+fc[4]*fc[20]*fc[23]+fc[4]*fc[21]*fc[22]-fc[5]*fc[11]*fc[31]-fc[5]*fc[12]*fc[30]+fc[5]*fc[19]*fc[23]+fc[5]*fc[20]*fc[22]-fc[6]*fc[11]*fc[30]+fc[6]*fc[19]*fc[22]+fc[8]*fc[11]*fc[28]+fc[8]*fc[12]*fc[27]+fc[8]*fc[13]*fc[26]-fc[8]*fc[15]*fc[24]-fc[8]*fc[16]*fc[23]-fc[8]*fc[17]*fc[22]+fc[9]*fc[11]*fc[27]+fc[9]*fc[12]*fc[26]-fc[9]*fc[15]*fc[23]-fc[9]*fc[16]*fc[22]+fc[10]*fc[11]*fc[26]-fc[10]*fc[15]*fc[22];
data[5] = fc[0]*fc[16]*fc[32]+fc[0]*fc[17]*fc[31]+fc[0]*fc[18]*fc[30]-fc[0]*fc[19]*fc[29]-fc[0]*fc[20]*fc[28]-fc[0]*fc[21]*fc[27]+fc[1]*fc[15]*fc[32]+fc[1]*fc[16]*fc[31]+fc[1]*fc[17]*fc[30]-fc[1]*fc[19]*fc[28]-fc[1]*fc[20]*fc[27]-fc[1]*fc[21]*fc[26]+fc[2]*fc[15]*fc[31]+fc[2]*fc[16]*fc[30]-fc[2]*fc[19]*fc[27]-fc[2]*fc[20]*fc[26]+fc[3]*fc[15]*fc[30]-fc[3]*fc[19]*fc[26]-fc[4]*fc[12]*fc[32]-fc[4]*fc[13]*fc[31]-fc[4]*fc[14]*fc[30]+fc[4]*fc[19]*fc[25]+fc[4]*fc[20]*fc[24]+fc[4]*fc[21]*fc[23]-fc[5]*fc[11]*fc[32]-fc[5]*fc[12]*fc[31]-fc[5]*fc[13]*fc[30]+fc[5]*fc[19]*fc[24]+fc[5]*fc[20]*fc[23]+fc[5]*fc[21]*fc[22]-fc[6]*fc[11]*fc[31]-fc[6]*fc[12]*fc[30]+fc[6]*fc[19]*fc[23]+fc[6]*fc[20]*fc[22]-fc[7]*fc[11]*fc[30]+fc[7]*fc[19]*fc[22]+fc[8]*fc[11]*fc[29]+fc[8]*fc[12]*fc[28]+fc[8]*fc[13]*fc[27]+fc[8]*fc[14]*fc[26]-fc[8]*fc[15]*fc[25]-fc[8]*fc[16]*fc[24]-fc[8]*fc[17]*fc[23]-fc[8]*fc[18]*fc[22]+fc[9]*fc[11]*fc[28]+fc[9]*fc[12]*fc[27]+fc[9]*fc[13]*fc[26]-fc[9]*fc[15]*fc[24]-fc[9]*fc[16]*fc[23]-fc[9]*fc[17]*fc[22]+fc[10]*fc[11]*fc[27]+fc[10]*fc[12]*fc[26]-fc[10]*fc[15]*fc[23]-fc[10]*fc[16]*fc[22];
data[4] = fc[0]*fc[17]*fc[32]+fc[0]*fc[18]*fc[31]-fc[0]*fc[20]*fc[29]-fc[0]*fc[21]*fc[28]+fc[1]*fc[16]*fc[32]+fc[1]*fc[17]*fc[31]+fc[1]*fc[18]*fc[30]-fc[1]*fc[19]*fc[29]-fc[1]*fc[20]*fc[28]-fc[1]*fc[21]*fc[27]+fc[2]*fc[15]*fc[32]+fc[2]*fc[16]*fc[31]+fc[2]*fc[17]*fc[30]-fc[2]*fc[19]*fc[28]-fc[2]*fc[20]*fc[27]-fc[2]*fc[21]*fc[26]+fc[3]*fc[15]*fc[31]+fc[3]*fc[16]*fc[30]-fc[3]*fc[19]*fc[27]-fc[3]*fc[20]*fc[26]-fc[4]*fc[13]*fc[32]-fc[4]*fc[14]*fc[31]+fc[4]*fc[20]*fc[25]+fc[4]*fc[21]*fc[24]-fc[5]*fc[12]*fc[32]-fc[5]*fc[13]*fc[31]-fc[5]*fc[14]*fc[30]+fc[5]*fc[19]*fc[25]+fc[5]*fc[20]*fc[24]+fc[5]*fc[21]*fc[23]-fc[6]*fc[11]*fc[32]-fc[6]*fc[12]*fc[31]-fc[6]*fc[13]*fc[30]+fc[6]*fc[19]*fc[24]+fc[6]*fc[20]*fc[23]+fc[6]*fc[21]*fc[22]-fc[7]*fc[11]*fc[31]-fc[7]*fc[12]*fc[30]+fc[7]*fc[19]*fc[23]+fc[7]*fc[20]*fc[22]+fc[8]*fc[12]*fc[29]+fc[8]*fc[13]*fc[28]+fc[8]*fc[14]*fc[27]-fc[8]*fc[16]*fc[25]-fc[8]*fc[17]*fc[24]-fc[8]*fc[18]*fc[23]+fc[9]*fc[11]*fc[29]+fc[9]*fc[12]*fc[28]+fc[9]*fc[13]*fc[27]+fc[9]*fc[14]*fc[26]-fc[9]*fc[15]*fc[25]-fc[9]*fc[16]*fc[24]-fc[9]*fc[17]*fc[23]-fc[9]*fc[18]*fc[22]+fc[10]*fc[11]*fc[28]+fc[10]*fc[12]*fc[27]+fc[10]*fc[13]*fc[26]-fc[10]*fc[15]*fc[24]-fc[10]*fc[16]*fc[23]-fc[10]*fc[17]*fc[22];
data[3] = fc[0]*fc[18]*fc[32]-fc[0]*fc[21]*fc[29]+fc[1]*fc[17]*fc[32]+fc[1]*fc[18]*fc[31]-fc[1]*fc[20]*fc[29]-fc[1]*fc[21]*fc[28]+fc[2]*fc[16]*fc[32]+fc[2]*fc[17]*fc[31]+fc[2]*fc[18]*fc[30]-fc[2]*fc[19]*fc[29]-fc[2]*fc[20]*fc[28]-fc[2]*fc[21]*fc[27]+fc[3]*fc[15]*fc[32]+fc[3]*fc[16]*fc[31]+fc[3]*fc[17]*fc[30]-fc[3]*fc[19]*fc[28]-fc[3]*fc[20]*fc[27]-fc[3]*fc[21]*fc[26]-fc[4]*fc[14]*fc[32]+fc[4]*fc[21]*fc[25]-fc[5]*fc[13]*fc[32]-fc[5]*fc[14]*fc[31]+fc[5]*fc[20]*fc[25]+fc[5]*fc[21]*fc[24]-fc[6]*fc[12]*fc[32]-fc[6]*fc[13]*fc[31]-fc[6]*fc[14]*fc[30]+fc[6]*fc[19]*fc[25]+fc[6]*fc[20]*fc[24]+fc[6]*fc[21]*fc[23]-fc[7]*fc[11]*fc[32]-fc[7]*fc[12]*fc[31]-fc[7]*fc[13]*fc[30]+fc[7]*fc[19]*fc[24]+fc[7]*fc[20]*fc[23]+fc[7]*fc[21]*fc[22]+fc[8]*fc[13]*fc[29]+fc[8]*fc[14]*fc[28]-fc[8]*fc[17]*fc[25]-fc[8]*fc[18]*fc[24]+fc[9]*fc[12]*fc[29]+fc[9]*fc[13]*fc[28]+fc[9]*fc[14]*fc[27]-fc[9]*fc[16]*fc[25]-fc[9]*fc[17]*fc[24]-fc[9]*fc[18]*fc[23]+fc[10]*fc[11]*fc[29]+fc[10]*fc[12]*fc[28]+fc[10]*fc[13]*fc[27]+fc[10]*fc[14]*fc[26]-fc[10]*fc[15]*fc[25]-fc[10]*fc[16]*fc[24]-fc[10]*fc[17]*fc[23]-fc[10]*fc[18]*fc[22];
data[2] = fc[1]*fc[18]*fc[32]-fc[1]*fc[21]*fc[29]+fc[2]*fc[17]*fc[32]+fc[2]*fc[18]*fc[31]-fc[2]*fc[20]*fc[29]-fc[2]*fc[21]*fc[28]+fc[3]*fc[16]*fc[32]+fc[3]*fc[17]*fc[31]+fc[3]*fc[18]*fc[30]-fc[3]*fc[19]*fc[29]-fc[3]*fc[20]*fc[28]-fc[3]*fc[21]*fc[27]-fc[5]*fc[14]*fc[32]+fc[5]*fc[21]*fc[25]-fc[6]*fc[13]*fc[32]-fc[6]*fc[14]*fc[31]+fc[6]*fc[20]*fc[25]+fc[6]*fc[21]*fc[24]-fc[7]*fc[12]*fc[32]-fc[7]*fc[13]*fc[31]-fc[7]*fc[14]*fc[30]+fc[7]*fc[19]*fc[25]+fc[7]*fc[20]*fc[24]+fc[7]*fc[21]*fc[23]+fc[8]*fc[14]*fc[29]-fc[8]*fc[18]*fc[25]+fc[9]*fc[13]*fc[29]+fc[9]*fc[14]*fc[28]-fc[9]*fc[17]*fc[25]-fc[9]*fc[18]*fc[24]+fc[10]*fc[12]*fc[29]+fc[10]*fc[13]*fc[28]+fc[10]*fc[14]*fc[27]-fc[10]*fc[16]*fc[25]-fc[10]*fc[17]*fc[24]-fc[10]*fc[18]*fc[23];
data[1] = fc[2]*fc[18]*fc[32]-fc[2]*fc[21]*fc[29]+fc[3]*fc[17]*fc[32]+fc[3]*fc[18]*fc[31]-fc[3]*fc[20]*fc[29]-fc[3]*fc[21]*fc[28]-fc[6]*fc[14]*fc[32]+fc[6]*fc[21]*fc[25]-fc[7]*fc[13]*fc[32]-fc[7]*fc[14]*fc[31]+fc[7]*fc[20]*fc[25]+fc[7]*fc[21]*fc[24]+fc[9]*fc[14]*fc[29]-fc[9]*fc[18]*fc[25]+fc[10]*fc[13]*fc[29]+fc[10]*fc[14]*fc[28]-fc[10]*fc[17]*fc[25]-fc[10]*fc[18]*fc[24];
data[0] = fc[3]*fc[18]*fc[32]-fc[3]*fc[21]*fc[29]-fc[7]*fc[14]*fc[32]+fc[7]*fc[21]*fc[25]+fc[10]*fc[14]*fc[29]-fc[10]*fc[18]*fc[25];
}
