#include "mex.h"

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
	if (nrhs != 3) {
		mexErrMsgIdAndTxt("F_from_sol_kF_cc:nrhs", "Wrong number of inputs.");
	}
	if (nlhs != 1) {
		mexErrMsgIdAndTxt("F_from_sol_kF_cc:nlhs", "One output required.");
	}

  double *Ar = mxGetPr(prhs[0]);
  double *Br = mxGetPr(prhs[1]);
  double *kk = mxGetPr(prhs[2]);
  size_t nsol = mxGetM(prhs[2]);
  mwSize i;
  double k;
  
  plhs[0] = mxCreateDoubleMatrix(9,(mwSize)nsol,mxREAL);    
  double *F = mxGetPr(plhs[0]);
  
  for (i=0;i<nsol;i++){
      k = kk[i];
      F[0 + 9*i] = -Ar[0]*Ar[14]*Ar[23]+Ar[0]*Ar[15]*Ar[22]+Ar[6]*Ar[8]*Ar[23]-Ar[6]*Ar[15]*Ar[16]-Ar[7]*Ar[8]*Ar[22]+Ar[7]*Ar[14]*Ar[16]-Ar[0]*Ar[14]*Br[23]*k+Ar[0]*Ar[15]*Br[22]*k+Ar[0]*Ar[22]*Br[15]*k-Ar[0]*Ar[23]*Br[14]*k+Ar[6]*Ar[8]*Br[23]*k-Ar[6]*Ar[15]*Br[16]*k-Ar[6]*Ar[16]*Br[15]*k+Ar[6]*Ar[23]*Br[8]*k-Ar[7]*Ar[8]*Br[22]*k+Ar[7]*Ar[14]*Br[16]*k+Ar[7]*Ar[16]*Br[14]*k-Ar[7]*Ar[22]*Br[8]*k-Ar[8]*Ar[22]*Br[7]*k+Ar[8]*Ar[23]*Br[6]*k+Ar[14]*Ar[16]*Br[7]*k-Ar[14]*Ar[23]*Br[0]*k-Ar[15]*Ar[16]*Br[6]*k+Ar[15]*Ar[22]*Br[0]*k-Ar[0]*Br[14]*Br[23]*(k*k)+Ar[0]*Br[15]*Br[22]*(k*k)+Ar[6]*Br[8]*Br[23]*(k*k)-Ar[6]*Br[15]*Br[16]*(k*k)-Ar[7]*Br[8]*Br[22]*(k*k)+Ar[7]*Br[14]*Br[16]*(k*k)+Ar[8]*Br[6]*Br[23]*(k*k)-Ar[8]*Br[7]*Br[22]*(k*k)-Ar[14]*Br[0]*Br[23]*(k*k)+Ar[14]*Br[7]*Br[16]*(k*k)+Ar[15]*Br[0]*Br[22]*(k*k)-Ar[15]*Br[6]*Br[16]*(k*k)-Ar[16]*Br[6]*Br[15]*(k*k)+Ar[16]*Br[7]*Br[14]*(k*k)+Ar[22]*Br[0]*Br[15]*(k*k)-Ar[22]*Br[7]*Br[8]*(k*k)-Ar[23]*Br[0]*Br[14]*(k*k)+Ar[23]*Br[6]*Br[8]*(k*k)-Br[0]*Br[14]*Br[23]*(k*k*k)+Br[0]*Br[15]*Br[22]*(k*k*k)+Br[6]*Br[8]*Br[23]*(k*k*k)-Br[6]*Br[15]*Br[16]*(k*k*k)-Br[7]*Br[8]*Br[22]*(k*k*k)+Br[7]*Br[14]*Br[16]*(k*k*k);
      F[1 + 9*i] = -Ar[1]*Ar[14]*Ar[23]+Ar[1]*Ar[15]*Ar[22]+Ar[6]*Ar[9]*Ar[23]-Ar[6]*Ar[15]*Ar[17]-Ar[7]*Ar[9]*Ar[22]+Ar[7]*Ar[14]*Ar[17]-Ar[1]*Ar[14]*Br[23]*k+Ar[1]*Ar[15]*Br[22]*k+Ar[1]*Ar[22]*Br[15]*k-Ar[1]*Ar[23]*Br[14]*k+Ar[6]*Ar[9]*Br[23]*k-Ar[6]*Ar[15]*Br[17]*k-Ar[6]*Ar[17]*Br[15]*k+Ar[6]*Ar[23]*Br[9]*k-Ar[7]*Ar[9]*Br[22]*k+Ar[7]*Ar[14]*Br[17]*k+Ar[7]*Ar[17]*Br[14]*k-Ar[7]*Ar[22]*Br[9]*k-Ar[9]*Ar[22]*Br[7]*k+Ar[9]*Ar[23]*Br[6]*k+Ar[14]*Ar[17]*Br[7]*k-Ar[14]*Ar[23]*Br[1]*k-Ar[15]*Ar[17]*Br[6]*k+Ar[15]*Ar[22]*Br[1]*k-Ar[1]*Br[14]*Br[23]*(k*k)+Ar[1]*Br[15]*Br[22]*(k*k)+Ar[6]*Br[9]*Br[23]*(k*k)-Ar[6]*Br[15]*Br[17]*(k*k)-Ar[7]*Br[9]*Br[22]*(k*k)+Ar[7]*Br[14]*Br[17]*(k*k)+Ar[9]*Br[6]*Br[23]*(k*k)-Ar[9]*Br[7]*Br[22]*(k*k)-Ar[14]*Br[1]*Br[23]*(k*k)+Ar[14]*Br[7]*Br[17]*(k*k)+Ar[15]*Br[1]*Br[22]*(k*k)-Ar[15]*Br[6]*Br[17]*(k*k)-Ar[17]*Br[6]*Br[15]*(k*k)+Ar[17]*Br[7]*Br[14]*(k*k)+Ar[22]*Br[1]*Br[15]*(k*k)-Ar[22]*Br[7]*Br[9]*(k*k)-Ar[23]*Br[1]*Br[14]*(k*k)+Ar[23]*Br[6]*Br[9]*(k*k)-Br[1]*Br[14]*Br[23]*(k*k*k)+Br[1]*Br[15]*Br[22]*(k*k*k)+Br[6]*Br[9]*Br[23]*(k*k*k)-Br[6]*Br[15]*Br[17]*(k*k*k)-Br[7]*Br[9]*Br[22]*(k*k*k)+Br[7]*Br[14]*Br[17]*(k*k*k);
      F[2 + 9*i] = Ar[14]*Ar[23]-Ar[15]*Ar[22]+Ar[14]*Br[23]*k-Ar[15]*Br[22]*k-Ar[22]*Br[15]*k+Ar[23]*Br[14]*k+Br[14]*Br[23]*(k*k)-Br[15]*Br[22]*(k*k);
      F[3 + 9*i] = -Ar[2]*Ar[14]*Ar[23]+Ar[2]*Ar[15]*Ar[22]+Ar[6]*Ar[10]*Ar[23]-Ar[6]*Ar[15]*Ar[18]-Ar[7]*Ar[10]*Ar[22]+Ar[7]*Ar[14]*Ar[18]-Ar[2]*Ar[14]*Br[23]*k+Ar[2]*Ar[15]*Br[22]*k+Ar[2]*Ar[22]*Br[15]*k-Ar[2]*Ar[23]*Br[14]*k+Ar[6]*Ar[10]*Br[23]*k-Ar[6]*Ar[15]*Br[18]*k-Ar[6]*Ar[18]*Br[15]*k+Ar[6]*Ar[23]*Br[10]*k-Ar[7]*Ar[10]*Br[22]*k+Ar[7]*Ar[14]*Br[18]*k+Ar[7]*Ar[18]*Br[14]*k-Ar[7]*Ar[22]*Br[10]*k-Ar[10]*Ar[22]*Br[7]*k+Ar[10]*Ar[23]*Br[6]*k+Ar[14]*Ar[18]*Br[7]*k-Ar[14]*Ar[23]*Br[2]*k-Ar[15]*Ar[18]*Br[6]*k+Ar[15]*Ar[22]*Br[2]*k-Ar[2]*Br[14]*Br[23]*(k*k)+Ar[2]*Br[15]*Br[22]*(k*k)+Ar[6]*Br[10]*Br[23]*(k*k)-Ar[6]*Br[15]*Br[18]*(k*k)-Ar[7]*Br[10]*Br[22]*(k*k)+Ar[7]*Br[14]*Br[18]*(k*k)+Ar[10]*Br[6]*Br[23]*(k*k)-Ar[10]*Br[7]*Br[22]*(k*k)-Ar[14]*Br[2]*Br[23]*(k*k)+Ar[14]*Br[7]*Br[18]*(k*k)+Ar[15]*Br[2]*Br[22]*(k*k)-Ar[15]*Br[6]*Br[18]*(k*k)-Ar[18]*Br[6]*Br[15]*(k*k)+Ar[18]*Br[7]*Br[14]*(k*k)+Ar[22]*Br[2]*Br[15]*(k*k)-Ar[22]*Br[7]*Br[10]*(k*k)-Ar[23]*Br[2]*Br[14]*(k*k)+Ar[23]*Br[6]*Br[10]*(k*k)-Br[2]*Br[14]*Br[23]*(k*k*k)+Br[2]*Br[15]*Br[22]*(k*k*k)+Br[6]*Br[10]*Br[23]*(k*k*k)-Br[6]*Br[15]*Br[18]*(k*k*k)-Br[7]*Br[10]*Br[22]*(k*k*k)+Br[7]*Br[14]*Br[18]*(k*k*k);
      F[4 + 9*i] = -Ar[3]*Ar[14]*Ar[23]+Ar[3]*Ar[15]*Ar[22]+Ar[6]*Ar[11]*Ar[23]-Ar[6]*Ar[15]*Ar[19]-Ar[7]*Ar[11]*Ar[22]+Ar[7]*Ar[14]*Ar[19]-Ar[3]*Ar[14]*Br[23]*k+Ar[3]*Ar[15]*Br[22]*k+Ar[3]*Ar[22]*Br[15]*k-Ar[3]*Ar[23]*Br[14]*k+Ar[6]*Ar[11]*Br[23]*k-Ar[6]*Ar[15]*Br[19]*k-Ar[6]*Ar[19]*Br[15]*k+Ar[6]*Ar[23]*Br[11]*k-Ar[7]*Ar[11]*Br[22]*k+Ar[7]*Ar[14]*Br[19]*k+Ar[7]*Ar[19]*Br[14]*k-Ar[7]*Ar[22]*Br[11]*k-Ar[11]*Ar[22]*Br[7]*k+Ar[11]*Ar[23]*Br[6]*k+Ar[14]*Ar[19]*Br[7]*k-Ar[14]*Ar[23]*Br[3]*k-Ar[15]*Ar[19]*Br[6]*k+Ar[15]*Ar[22]*Br[3]*k-Ar[3]*Br[14]*Br[23]*(k*k)+Ar[3]*Br[15]*Br[22]*(k*k)+Ar[6]*Br[11]*Br[23]*(k*k)-Ar[6]*Br[15]*Br[19]*(k*k)-Ar[7]*Br[11]*Br[22]*(k*k)+Ar[7]*Br[14]*Br[19]*(k*k)+Ar[11]*Br[6]*Br[23]*(k*k)-Ar[11]*Br[7]*Br[22]*(k*k)-Ar[14]*Br[3]*Br[23]*(k*k)+Ar[14]*Br[7]*Br[19]*(k*k)+Ar[15]*Br[3]*Br[22]*(k*k)-Ar[15]*Br[6]*Br[19]*(k*k)-Ar[19]*Br[6]*Br[15]*(k*k)+Ar[19]*Br[7]*Br[14]*(k*k)+Ar[22]*Br[3]*Br[15]*(k*k)-Ar[22]*Br[7]*Br[11]*(k*k)-Ar[23]*Br[3]*Br[14]*(k*k)+Ar[23]*Br[6]*Br[11]*(k*k)-Br[3]*Br[14]*Br[23]*(k*k*k)+Br[3]*Br[15]*Br[22]*(k*k*k)+Br[6]*Br[11]*Br[23]*(k*k*k)-Br[6]*Br[15]*Br[19]*(k*k*k)-Br[7]*Br[11]*Br[22]*(k*k*k)+Br[7]*Br[14]*Br[19]*(k*k*k);
      F[5 + 9*i] = -Ar[6]*Ar[23]+Ar[7]*Ar[22]-Ar[6]*Br[23]*k+Ar[7]*Br[22]*k+Ar[22]*Br[7]*k-Ar[23]*Br[6]*k-Br[6]*Br[23]*(k*k)+Br[7]*Br[22]*(k*k);
      F[6 + 9*i] = -Ar[4]*Ar[14]*Ar[23]+Ar[4]*Ar[15]*Ar[22]+Ar[6]*Ar[12]*Ar[23]-Ar[6]*Ar[15]*Ar[20]-Ar[7]*Ar[12]*Ar[22]+Ar[7]*Ar[14]*Ar[20]-Ar[4]*Ar[14]*Br[23]*k+Ar[4]*Ar[15]*Br[22]*k+Ar[4]*Ar[22]*Br[15]*k-Ar[4]*Ar[23]*Br[14]*k+Ar[6]*Ar[12]*Br[23]*k-Ar[6]*Ar[15]*Br[20]*k-Ar[6]*Ar[20]*Br[15]*k+Ar[6]*Ar[23]*Br[12]*k-Ar[7]*Ar[12]*Br[22]*k+Ar[7]*Ar[14]*Br[20]*k+Ar[7]*Ar[20]*Br[14]*k-Ar[7]*Ar[22]*Br[12]*k-Ar[12]*Ar[22]*Br[7]*k+Ar[12]*Ar[23]*Br[6]*k+Ar[14]*Ar[20]*Br[7]*k-Ar[14]*Ar[23]*Br[4]*k-Ar[15]*Ar[20]*Br[6]*k+Ar[15]*Ar[22]*Br[4]*k-Ar[4]*Br[14]*Br[23]*(k*k)+Ar[4]*Br[15]*Br[22]*(k*k)+Ar[6]*Br[12]*Br[23]*(k*k)-Ar[6]*Br[15]*Br[20]*(k*k)-Ar[7]*Br[12]*Br[22]*(k*k)+Ar[7]*Br[14]*Br[20]*(k*k)+Ar[12]*Br[6]*Br[23]*(k*k)-Ar[12]*Br[7]*Br[22]*(k*k)-Ar[14]*Br[4]*Br[23]*(k*k)+Ar[14]*Br[7]*Br[20]*(k*k)+Ar[15]*Br[4]*Br[22]*(k*k)-Ar[15]*Br[6]*Br[20]*(k*k)-Ar[20]*Br[6]*Br[15]*(k*k)+Ar[20]*Br[7]*Br[14]*(k*k)+Ar[22]*Br[4]*Br[15]*(k*k)-Ar[22]*Br[7]*Br[12]*(k*k)-Ar[23]*Br[4]*Br[14]*(k*k)+Ar[23]*Br[6]*Br[12]*(k*k)-Br[4]*Br[14]*Br[23]*(k*k*k)+Br[4]*Br[15]*Br[22]*(k*k*k)+Br[6]*Br[12]*Br[23]*(k*k*k)-Br[6]*Br[15]*Br[20]*(k*k*k)-Br[7]*Br[12]*Br[22]*(k*k*k)+Br[7]*Br[14]*Br[20]*(k*k*k);
      F[7 + 9*i] = -Ar[5]*Ar[14]*Ar[23]+Ar[5]*Ar[15]*Ar[22]+Ar[6]*Ar[13]*Ar[23]-Ar[6]*Ar[15]*Ar[21]-Ar[7]*Ar[13]*Ar[22]+Ar[7]*Ar[14]*Ar[21]-Ar[5]*Ar[14]*Br[23]*k+Ar[5]*Ar[15]*Br[22]*k+Ar[5]*Ar[22]*Br[15]*k-Ar[5]*Ar[23]*Br[14]*k+Ar[6]*Ar[13]*Br[23]*k-Ar[6]*Ar[15]*Br[21]*k-Ar[6]*Ar[21]*Br[15]*k+Ar[6]*Ar[23]*Br[13]*k-Ar[7]*Ar[13]*Br[22]*k+Ar[7]*Ar[14]*Br[21]*k+Ar[7]*Ar[21]*Br[14]*k-Ar[7]*Ar[22]*Br[13]*k-Ar[13]*Ar[22]*Br[7]*k+Ar[13]*Ar[23]*Br[6]*k+Ar[14]*Ar[21]*Br[7]*k-Ar[14]*Ar[23]*Br[5]*k-Ar[15]*Ar[21]*Br[6]*k+Ar[15]*Ar[22]*Br[5]*k-Ar[5]*Br[14]*Br[23]*(k*k)+Ar[5]*Br[15]*Br[22]*(k*k)+Ar[6]*Br[13]*Br[23]*(k*k)-Ar[6]*Br[15]*Br[21]*(k*k)-Ar[7]*Br[13]*Br[22]*(k*k)+Ar[7]*Br[14]*Br[21]*(k*k)+Ar[13]*Br[6]*Br[23]*(k*k)-Ar[13]*Br[7]*Br[22]*(k*k)-Ar[14]*Br[5]*Br[23]*(k*k)+Ar[14]*Br[7]*Br[21]*(k*k)+Ar[15]*Br[5]*Br[22]*(k*k)-Ar[15]*Br[6]*Br[21]*(k*k)-Ar[21]*Br[6]*Br[15]*(k*k)+Ar[21]*Br[7]*Br[14]*(k*k)+Ar[22]*Br[5]*Br[15]*(k*k)-Ar[22]*Br[7]*Br[13]*(k*k)-Ar[23]*Br[5]*Br[14]*(k*k)+Ar[23]*Br[6]*Br[13]*(k*k)-Br[5]*Br[14]*Br[23]*(k*k*k)+Br[5]*Br[15]*Br[22]*(k*k*k)+Br[6]*Br[13]*Br[23]*(k*k*k)-Br[6]*Br[15]*Br[21]*(k*k*k)-Br[7]*Br[13]*Br[22]*(k*k*k)+Br[7]*Br[14]*Br[21]*(k*k*k);
      F[8 + 9*i] = Ar[6]*Ar[15]-Ar[7]*Ar[14]+Ar[6]*Br[15]*k-Ar[7]*Br[14]*k-Ar[14]*Br[7]*k+Ar[15]*Br[6]*k+Br[6]*Br[15]*(k*k)-Br[7]*Br[14]*(k*k);
  }
}
